<Window x:Class="WPF_Falling.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MainWindow" 
        Height="{Binding WindowHeight, Mode=TwoWay}" 
        Width="{Binding WindowWidth, Mode=TwoWay}" 
        d:Width="900" 
        d:Height="512">
    
    <!-- Az ablak tényleges mérete a Width és Height propertykből jön, azonban hogy ne legyen a designerben láthatatlan az egész
         ezért a d:Width és d:Height (designer Width és designer Height) is be van állítva reális értékekre -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" Grid.Row="1" Content="Pezsgőeső" Command="{Binding ButtonClickCommand, Mode=OneWay}"/>

        <!-- Itt valósítjuk meg a tényleges rajzolását az elemeknek. Ha mást is kell rajzolni, mint például egy játékost,
             akkor ez az ItemsControl bemehet egy másik Canvasba, ahol rajzoljuk a játékost is. Ha kattintást szeretnénk
             valamiért a leeső elemekre, akkor ezt a WPF-PanelMatrix mintájára tehetjük meg -->
        <ItemsControl ItemsSource="{Binding Renderables, Mode=OneWay}" Grid.Row="0" Grid.Column="0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Rectangle Fill="{Binding Brush, Mode=OneWay}" 
                               Width="{Binding Width, Mode=OneWay}"
                               Height="{Binding Height, Mode=OneWay}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding Path=X, Mode=OneWay}" />
                    <Setter Property="Canvas.Top" Value="{Binding Path=Y, Mode=OneWay}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Grid>
</Window>
